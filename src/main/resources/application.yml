spring:
  application:
    name: server
  servlet:
    multipart:
      enabled: true
      max-file-size: 100MB
      max-request-size: 100MB
  ai:
    openai:
      api-key: ${OPENAI_API_KEY}
      base-url: https://api.groq.com/openai
      chat:
        options:
          model: meta-llama/llama-4-scout-17b-16e-instruct
          temperature: 0.7
          max-tokens: 2000
  open-data:
      address-api-key: ${ADDRESS_API_KEY}
      address-url: ${ADDRESS_URL}
  docker:
    compose:
      enabled: false

prompts:
  deep-prompt: |
    아래는 전세 매물 입력값과 등기부 파싱 결과(선택)야. 이를 근거로 OpenAPI 1.2.0의 AnalysisReport 스키마와 동일한 JSON을 생성해.

        [요청 입력]
        - address: {{address}}            # 사용자가 입력한 주소(문자열)
        - leaseDeposit: {{leaseDeposit}}  # 전세 보증금(원, 정수)
        - landlord: {{landlord}}          # 임대인 이름(선택, 없으면 빈 문자열)

        [등기부 파싱 결과 ParseResultDto] 
        - address: {{parseResultDto.address}}
        - uniqueNumber: {{parseResultDto.uniqueNumber}}

        - coverSection.mainBuildingInfo:
          · address: {{parseResultDto.coverSection.mainBuildingInfo.address}}
          · buildingName: {{parseResultDto.coverSection.mainBuildingInfo.buildingName}}
          · structure: {{parseResultDto.coverSection.mainBuildingInfo.structure}}
          · totalFloors: {{parseResultDto.coverSection.mainBuildingInfo.totalFloors}}

        - coverSection.propertyInfo:
          · floorAndUnit: {{parseResultDto.coverSection.propertyInfo.floorAndUnit}}
          · structure: {{parseResultDto.coverSection.propertyInfo.structure}}
          · area: {{parseResultDto.coverSection.propertyInfo.area}}
        
        - coverSection.landRights[]:
        {{#parseResultDto.coverSection.landRights}}
        · { type: "{{type}}", ratio: "{{ratio}}" }
        {{/parseResultDto.coverSection.landRights}}

        - gapguSection.ownershipHistory[]:
        {{#parseResultDto.gapguSection.ownershipHistory}}
        · { sequence: {{sequence}}, receiptDate: "{{receiptDate}}", cause: "{{cause}}", ownerName: "{{ownerName}}", dealPrice: {{dealPrice}} }
        {{/parseResultDto.gapguSection.ownershipHistory}}

        - eulguSection.lienHistory[]:
        {{#parseResultDto.eulguSection.lienHistory}}
        · { sequence: {{sequence}}, type: "{{type}}", receiptDate: "{{receiptDate}}", cause: "{{cause}}", debtor: "{{debtor}}", creditor: "{{creditor}}", amount: {{amount}}, isTerminated: {{isTerminated}} }
        {{/parseResultDto.eulguSection.lienHistory}}
        
        [작성 규칙]
        1) analysisType = hasRegistry
        2) propertyInfo.address = 요청 address 우선. 등기부 주소와 다르면 "주소/표시 불일치" 항목을 생성.
        3) marketPrice 추정 규칙은 시스템 프롬프트를 따른다(정수 원).
        4) riskRatio = (leaseDeposit / marketPrice) × 100(소수점 1자리). hasRegistry=false면 null 또는 미포함.
        5) detailedRiskAnalysis는 최소 4개 이상(등기부 없으면 3개 이상) 생성. 각 항목은 구체 근거 수치/날짜 포함.
        6) overallRiskLevel은 규칙(전세가율+강화 규칙)에 따라 산정.
        7) aiGeneralComment는 2~4문장 한국어.
        8) humanChecklist는 5~8개. isEssential=true 위주.
        9) 출력은 아래 JSON 스키마(키 순서 유지) 그대로. 오직 JSON만.

        [최종 출력 JSON 스키마 예시(키 순서 고정)]
        {
          "reportId": "{{reportId}}",                       // 서버에서 UUID 바인딩하거나, 임시로 "{{reportId}}" 그대로 둬도 됨
          "analysisType": (true|false),
          "overallRiskLevel": "안전|주의|위험|고위험",
          "propertyInfo": {
            "address": "string",
            "marketPrice": 123456789,                       // 정수(원)
            "leaseDeposit": {{request.leaseDeposit}},       // 정수(원)
            "riskRatio": 76.9                               // 소수점 1자리; hasRegistry=false면 null 또는 생략
          },
          "detailedRiskAnalysis": [
            {
              "category": "전세가율",
              "riskLevel": "안전|주의|위험",
              "comment": "구체 근거를 포함한 한국어 설명"
            }
            // 최소 3~7개 항목 추가(선순위 채권 분석, 말소기준권리, 소유권 변동, 건축물/대지권, 주소/표시 불일치, 특약 필요사항 등)
          ],
          "aiGeneralComment": "2~4문장의 한국어 종합 코멘트",
          "humanChecklist": [
            {
              "title": "임대인 신분/대리권 확인",
              "description": "계약 당일, 등기부 소유주와 임대인/대리인 신분증·위임장 일치 확인. 위임장 원본·인감증명서 포함.",
              "isEssential": true
            }
            // 4~7개 항목 추가(확정일자·전입신고, 말소기준권리 재검증, 추가근저당 금지 특약, 체납 관리비/공과금 확인, 건축물대장·용도·불법개조, 계약 전 최신 등기부 재발급 일자 등)
          ]
        }

  quick-prompt: |
    "등기부 미첨부" 시나리오다. 아래 입력만을 근거로 OpenAPI 1.2.0의 AnalysisReport 스키마와 동일한 JSON을 생성하라.

        [요청 입력]
        - address: {{address}}            # 사용자가 입력한 주소(문자열)
        - leaseDeposit: {{leaseDeposit}}  # 전세 보증금(원, 정수)
        - landlord: {{landlord}}          # 임대인 이름(선택, 없으면 빈 문자열)

        [전제]
        - hasRegistry: false                      # 등기부 파싱 결과 없음

        [작성 규칙]
        1) analysisType = false
        2) propertyInfo.address = 요청 address 사용.
        3) marketPrice는 시스템 프롬프트의 추정 규칙을 적용해 보수적으로 산출(정수 원). 등기부 데이터가 없으므로 추정 근거를 comment에 남긴다.
        4) riskRatio는 null로 두거나 생략한다(권장). 수치가 필요하면 comment 내부에 “추정 전세가율”로 설명만 한다.
        5) detailedRiskAnalysis는 최소 3개 이상 작성. 권장 카테고리:
           - "전세가율(추정)"
           - "등기부 미첨부 리스크"
           - "특약 필요사항"
           - (선택) "지역/시세 변동성", "건축물/대지권(추정 한계)"
           각 항목은 riskLevel ∈ {안전, 주의, 위험} 중 선택하고, comment에 추정 근거/불확실성을 구체적으로 기재한다.
        6) overallRiskLevel은 보수적으로 산정한다.
           - 전세가율 추정 구간(내부적으로 계산 가능하나 riskRatio 필드는 null 유지)과 데이터 부재 페널티를 반영해 한 단계 상향 가능.
        7) aiGeneralComment는 2~4문장 한국어로 핵심 리스크와 조치를 요약(등기부 미첨부로 인한 불확실성 강조).
        8) humanChecklist는 5~8개 작성, isEssential=true 위주.
           예시: 최신 등기부 즉시 발급 요청, 임대인 신원·대리권 확인, 확정일자·전입신고 당일 처리, 체납 관리비·공과금 확인,
                추가근저당 금지·원상복구·인도/명도 특약 삽입, 건축물대장/용도/불법개조 확인 등.
        9) 출력은 아래 JSON 스키마(키 순서 유지) 그대로. 오직 JSON만 출력한다(코드블록/설명 금지).

        [최종 출력 JSON 스키마(키 순서 고정)]
        {
          "reportId": "{{reportId}}",
          "analysisType": false,
          "overallRiskLevel": "안전|주의|위험|고위험",
          "propertyInfo": {
            "address": "{{address}}",
            "marketPrice": 123456789,
            "leaseDeposit": {{leaseDeposit}},
            "riskRatio": null  // 등기부 미첨부 시 null 또는 필드 생략
          },
          "detailedRiskAnalysis": [
            {
              "category": "전세가율(추정)",
              "riskLevel": "안전|주의|위험",
              "comment": "보증금과 유사매물 가정치로 추정한 시세 근거, 내부 계산된 추정 전세가율(수치는 참고로만 언급), 불확실성 범위 등 구체 서술"
            },
            {
              "category": "등기부 미첨부 리스크",
              "riskLevel": "주의",
              "comment": "선순위 권리·압류·경매 여부 확인 불가로 인한 불확실성 및 보수적 판단 필요성 명시"
            },
            {
              "category": "특약 필요사항",
              "riskLevel": "주의",
              "comment": "추가근저당 금지, 체납 정산, 원상복구, 인도·명도, 중도 말소 요구 등 권고 특약 제시"
            }
            // 필요시 "지역/시세 변동성", "건축물/대지권(추정 한계)" 등 1~4개 항목 추가
          ],
          "aiGeneralComment": "2~4문장의 한국어 종합 코멘트(등기부 미첨부에 따른 보수 판단과 즉시 발급 권고 포함)",
          "humanChecklist": [
            {
              "title": "최신 등기부 즉시 발급",
              "description": "계약 전·당일 등기부 최신본으로 권리변동(근저당/압류/경매 등) 확인.",
              "isEssential": true
            }
            // 확정일자·전입신고, 임대인 신원·대리권 확인, 추가근저당 금지, 체납 확인, 건축물대장 확인 등 4~7개 항목 추가
          ]
        }
  system: |
    출력 형식:
    - 오직 JSON만 출력한다. 코드블록, 설명 문장, 접두/접미 텍스트 금지.
    - 키 이름/타입/열거값은 스키마와 완전히 동일해야 한다.
    - 숫자는 한국 원(정수) 기준으로 출력하되, 전세가율(riskRatio)은 소수점 1자리까지.
    - 불확실하거나 데이터가 없으면 추정/판단 근거를 "comment"에 한국어로 명시한다.
    
    열거/제약:
    - overallRiskLevel ∈ {"안전","주의","위험","고위험"}
    - detailedRiskAnalysis[*].riskLevel ∈ {"안전","주의","위험"}
    - analysisType: 등기부 파싱 데이터가 존재하면 true, 없으면 false
    
    로직 개요:
    1) 주소/보증금/등기부 파싱(있다면)을 근거로 분석.
    2) 시세(marketPrice) 추정:
    - 우선순위 A: 등기부 갑구 소유권 변동 내 최근 dealPrice가 있으면 이를 기준가격으로 삼고 ±5% 범위에서 보수적 보정.
    - 우선순위 B: 없으면 보증금(leaseDeposit)을 기준으로 1.2~1.5배 범위에서 보수적 추정(근거를 comment에 남김).
    - 반드시 정수(원)로 산출.
    3) 전세가율(riskRatio) 계산: (leaseDeposit / marketPrice) × 100 (소수점 1자리). 
    - 등기부가 없으면 riskRatio는 null로 두거나(권장) 생략한다.
    4) 선순위 채권/말소기준권리:
    - 을구(lienHistory) 중 isTerminated=false인 권리들을 선순위 위험으로 간주.
    - 존재 시 "선순위 채권 분석" 항목을 추가하고 채권종류/채권최고액/설정일/말소여부를 요약.
    5) 종합 등급 산정(보수적):
    - 기본: 전세가율 기준
       · ≤60%: "안전"
       · 60~75%: "주의"
       · 75~90%: "위험"
       · >90%: "고위험"
    - 강화 규칙(한 단계 이상 상향):
       · 미말소(존속) 선순위 채권 총액 + leaseDeposit ≥ marketPrice × 0.9 → "고위험"
       · 압류/가압류/경매/가처분 등 집행성 권리 존재 → 최소 "위험"
       · 최근(2년 내) 잦은 소유권 변동(2회 이상) → 한 단계 상향
    6) 상세 위험 항목(detailedRiskAnalysis):
    - 각 항목은 category, riskLevel, comment로 기술.
    - 권장 카테고리 예시:
     "전세가율", "선순위 채권 분석", "말소기준권리", "소유권 변동", "건축물/대지권", "주소/표시 불일치", "특약 필요사항"
    - 등기부가 없으면 생성 가능한 항목(전세가율 제외) 위주로 작성.
    7) AI 종합 코멘트(aiGeneralComment):
    - 핵심 리스크와 조치 권고를 2~4문장으로 요약.
    8) 사람이 확인해야 할 체크리스트(humanChecklist):
    - 5~8개 내외, isEssential=true 위주로 구성.
    - 예: 임대인 신원·대리권 확인, 등기부 최신본 재발급일 확인, 전입신고·확정일자 당일 처리, 선순위 채권 변동 감시, 체납 관리비·공과금 확인, 특약(추가근저당 금지/원상복구/인도·명도/중도말소 등) 삽입, 건축물대장 용도·불법개조 여부 확인 등.
    
    검증:
    - 모든 코멘트에는 가능한 한 입력 데이터(날짜, 금액, 권리종류 등)에서 유추한 구체 근거를 포함한다.
    - 모호하면 보수적으로 판단하고 그 이유를 comment에 명시한다.

logging:
  level:
    com.safe_jeonse.server.service.PdfParseService: DEBUG